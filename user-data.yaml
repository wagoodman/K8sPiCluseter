#cloud-config
# vim: syntax=yaml
#

# The current version of cloud-init in the Hypriot rpi-64 is 0.7.9
# When dealing with cloud-init, it is SUPER important to know the version
# I have wasted many hours creating servers to find out the module I was trying to use wasn't in the cloud-init version I had
# Documentation: http://cloudinit.readthedocs.io/en/0.7.9/index.html

# Set your hostname here, the manage_etc_hosts will update the hosts file entries as well
hostname: pinode
manage_etc_hosts: true

# You could modify this for your own user information
users:
  - name: user
    gecos: "Alex Goodman"
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: users,docker,video
    plain_text_passwd: password1
    lock_passwd: false
    ssh_pwauth: true
    chpasswd: { expire: false }

# This expands the root volume to the entire SD Card, similar to what the raspbian images did on first boot.
# This doesn't seem to be required, its more here for posterity in understanding what is going on
resize_rootfs: true
growpart:
    mode: auto
    devices: ["/"]
    ignore_growroot_disabled: false

# Update our packages on first boot, saves us some time
package_update: true
package_upgrade: false
package_reboot_if_required: false

# Install any additional packages you need here
packages:
  - ntp
  - vim
  - tzdata

# Set the locale of the system
locale: "en_US.UTF-8"

# Set the timezone
# Value of 'timezone' must exist in /usr/share/zoneinfo
timezone: "America/New_York"

# Tell docker to tag this node appropriately
# Currently we need the experimental?
write_files:
    - path: "/etc/docker/daemon.json"
      owner: "root:root"
      content: |
        {
          "labels": [ "os=linux", "arch=arm64" ],
          "experimental": true
        }
# These commands will be ran once on first boot only
runcmd:
  # Pickup the hostname changes
  - [ systemctl, restart, avahi-daemon ]
  
  # Pickup the daemon.json changes
  - [ systemctl, restart, docker ]
  
  # Run portainer, so we can see our logs and control stuff from a UI
  - [ docker, volume, create, portainer_data ]
  - [
      docker, run, 
      "--restart", "unless-stopped", 
      "--name", "portainer",
      "-p", "9000:9000", 
      "-v", "/var/run/docker.sock:/var/run/docker.sock",
      "-v", "portainer_data:/data",
      "portainer/portainer", "-H", "unix:///var/run/docker.sock", "--no-auth"
    ]

  - [ reboot ]